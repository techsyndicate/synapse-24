<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <link rel="stylesheet" href="https://unpkg.com/leaflet/dist/leaflet.css" />
    <link rel="icon" type="image/png" href="/logo.png">
    <script src="https://unpkg.com/leaflet/dist/leaflet.js"></script>
    <style>
        .main {
            width: 85vw;
            margin-left: 7.5vw;
            margin-top: 3vw;
            display: flex;
            justify-content: space-between;
            gap: 6vw;
        }
        .left {
            width: 37vw;
            flex-grow: 1;
            transform: translateY(5.5vw);
        }
        .left h1 {
            font-weight: 600;
            margin: 0px;
            font-size: 2.7vw;
        }
        .blueText {
            color: #466eff
        }
        .locationNameInitialP {
            margin: 0px;
            margin-top: 0.7vw;
        }
        #locationNameInitial {
            font-size: 1.1vw;
        }
        .locationNameInitialP i {
            font-size: 1.3vw;
        }
        .searchFull {
            position: relative;
            width: 100%;
            margin-top: 1.5vw;
        }
        .searchResults {
            background: #18181b;
            padding-top: 4.1vw;
            border-radius: 1vw;
            padding-bottom: 0.75vw;
            visibility: hidden;
        }
        .searchResult {
            font-size: 1.1vw;
            display: flex;
            align-items: flex-end;
            padding-left: 4vw;
            padding-top: 0.75vw;
            padding-bottom: 0.75vw;
            cursor: pointer;
            transition: 0.2s;
        }
        .searchResult:hover {
            background-color: #212121;
        }
        .inputContainer {
            position: absolute;
            width: 100%;
            top: 0;
            left: 0;
        }
        .searchIconContainer {
            width: 4vw;
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 1.1vw;
            position: absolute;
            top: 0;
            left: 0;
            height: 100%;
            line-height: 0px;
        }
        .inputContainer input {
            width: 100%;
            padding: 1.4vw;
            padding-left: 4vw;
            border-radius: 1vw;
            background-color: #212122;
            border: none;
            outline: none;
            color: white;
            font-family: 'Outfit';
            font-size: 1.1vw;
        }
        #map {
            width: 37vw !important;
            flex-grow: 1;
            border: 1px solid white;
            border-radius: 2vw;
        }
        .popupBtn {
            border: 2px solid black;
            outline: none;
            cursor: pointer;
            transition: 0.2s;
            border-radius: 50px;
            background-color: #18181b;
            color: white;
            padding: 1vw;
        }
        .popupBtn:hover {
            background-color: black;
        }
        .leaflet-popup-content-wrapper {
            background-color: #466eff;
        }
        .leaflet-popup-tip {
            background-color: #466eff;
        }
        .leaflet-popup-close-button {
            color: black !important;
        }
        .homePageLink {
            color: #466eff !important;
        }
    </style>
</head>
<body>
    <%- include('./partials/cursor.ejs') %>
    <div class="main">
        <div class="left" id="left">
            <h1><span class="blueText">Hello&nbsp;</span><%= user.fname %>!</h1>
            <p class="locationNameInitialP"><i class="fas fa-map-marker-alt blueText"></i> &nbsp;&nbsp;<span id="locationNameInitial"></span></p>
            <h1 style="font-size: 3vw; margin-top: 2vw;">Where would you like to go today?</h1>
            <div class="searchFull">
                <div class="inputContainer">
                    <div class="searchIconContainer">
                        <i class="blueText searchIcon fas fa-search"></i>
                    </div>
                    <input type="text" placeholder="Search Places..." oninput="handleSearch(event)" id="searchPlaces">
                </div>
                <div class="searchResults" id="searchResultsKaContainer">
                    <div class="searchResult" style="margin-top: 0.75vw;" onclick="processLocation('searchResult0')"><span style="visibility: hidden;">.</span><span id="searchResult0"></span></div>
                    <div class="searchResult" onclick="processLocation('searchResult1')"><span style="visibility: hidden;">.</span><span id="searchResult1"></span></div>
                    <div class="searchResult" onclick="processLocation('searchResult2')"><span style="visibility: hidden;">.</span><span id="searchResult2"></span></div>
                    <div class="searchResult" onclick="processLocation('searchResult3')"><span style="visibility: hidden;">.</span><span id="searchResult3"></span></div>
                </div>
            </div>
        </div>
        <div id="map"></div>
    </div>

    <script>
        var selectedLocation = false
        var map, marker, redMarker 
        var myFinalHomeLocation
        const typingKaTimeout = 500
        let typingTimer;
        function handleSearch(e) {
            clearTimeout(typingTimer)
            typingTimer = setTimeout(() => {
                getLocationCoordinates(e.target.value)
            }, typingKaTimeout)
        }
        function getLocation() {
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(showPosition);
            } else {
                console.log("Geolocation is not supported by this browser.");
            }
        }

        async function showPosition(position) {
            getLocationName(position.coords.latitude, position.coords.longitude, true)
            redMarker = L.icon({
                iconUrl: '/marker.png',
                iconSize: [80, 80],
                iconAnchor: [40, 40],
                popupAnchor: [1, -34],
                shadowSize: [41, 41]
            });
            console.log('called')
            map = L.map('map', {zoomControl: false, attributionControl: false}).setView([position.coords.latitude, position.coords.longitude], 15);
            L.tileLayer('https://{s}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}{r}.png', {
                subdomains: 'abcd',
                maxZoom: 19
            }).addTo(map);
            marker = L.marker([position.coords.latitude, position.coords.longitude], {icon: redMarker}).addTo(map);
            marker.bindPopup("<p style='font-family: outfit; font-size: 1.2vw; color: black; cursor: pointer;' onclick='navigator.geolocation.getCurrentPosition(handleSubmission);'>Select</p>").openPopup();
            selectedLocation = true

            map.on('click', function(e) {
                const apiUrl = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${e.latlng.lat}&lon=${e.latlng.lng}`;
                fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    const locationName = data.display_name;
                    console.log(locationName)
                    console.log('called')
                    document.getElementById('searchPlaces').value = locationName
                    if (data.address.country != 'India') {
                        alert('Sorry, we are currently not providing services outside India.')
                    } else {
                        marker.remove()
                        marker = L.marker([e.latlng.lat, e.latlng.lng], {icon: redMarker}).addTo(map);
                        marker.bindPopup("<p style='font-family: outfit; font-size: 1.2vw; color: black; cursor: pointer;' onclick='navigator.geolocation.getCurrentPosition(handleSubmission);'>Select</p>").openPopup();
                        selectedLocation = true
                        document.getElementById('searchPlaces').value = locationName
                        getLocationCoordinates(locationName)
                    }
                })
            });
        }
        getLocation()

        function getLocationName(lat, lng, isInit) {
            const latitude = lat;
            const longitude = lng;
            const apiUrl = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${latitude}&lon=${longitude}`;
            fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                myFinalHomeLocation = data.display_name;
                console.log(myFinalHomeLocation)
                if (isInit) {
                    document.getElementById('locationNameInitial').innerHTML = myFinalHomeLocation
                }
            })
            .catch(error => {
                console.log('error', error)
            });
        }

        function getLocationCoordinates(search, isFromSearchResult) {
            const locationName = search;
            const apiUrl = `https://nominatim.openstreetmap.org/search?format=json&q=${encodeURIComponent(locationName)}`;
            fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                console.log(data)
                if (data.length > 0) {
                    const latitude = data[0].lat;
                    const longitude = data[0].lon;
                    if (isFromSearchResult) {
                        processLocationFinal(latitude, longitude)
                    }
                    document.getElementById('left').style.transform = 'translate(0px)'
                    document.getElementById('searchResultsKaContainer').style.visibility = 'visible'
                    for (let i = 0; i < data.length; i++) {
                        if (i >= 4) break
                        document.getElementById(`searchResult${i}`).innerHTML = data[i].display_name
                    }
                } else {
                    console.log('Location not found');
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        }
        function processLocation(id) {
            const locationStr = document.getElementById(id).innerHTML
            getLocationCoordinates(locationStr, true)
        }
        function processLocationFinal(lat, long) {
            const apiUrl = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${long}`;
                fetch(apiUrl)
                .then(response => response.json())
                .then(data => {
                    const locationName = data.display_name;
                    if (data.address.country != 'India') {
                        alert('Sorry, we are currently not providing services outside India.')
                    } else {
                        marker.remove()
                        marker = L.marker([lat, long], {icon: redMarker}).addTo(map);
                        marker.bindPopup("<p style='font-family: outfit; font-size: 1.2vw; color: black; cursor: pointer;' onclick='navigator.geolocation.getCurrentPosition(handleSubmission)'>Select</p>").openPopup();
                        map.setView([lat, long], 15)
                    }
                })
        }
        function handleSubmission(position) {
            const {lat, lng} = marker.getLatLng()
            const apiUrl = `https://nominatim.openstreetmap.org/reverse?format=json&lat=${lat}&lon=${lng}`;
            fetch(apiUrl)
            .then(response => response.json())
            .then(data => {
                const locationName = data.display_name;
                const formElement = document.createElement('form')
                const inputOne = document.createElement('input')
                const inputTwo = document.createElement('input')
                const inputThree = document.createElement('input')
                const inputFour = document.createElement('input')
                const inputFive = document.createElement('input')
                const inputSix = document.createElement('input')
                inputOne.setAttribute('name', 'location')
                inputOne.value = locationName
                inputTwo.setAttribute('name', 'latitude')
                inputTwo.value = marker.getLatLng().lat
                inputThree.setAttribute('name', 'longitude')
                inputThree.value = marker.getLatLng().lng
                inputFour.setAttribute('name', 'myLongitude')
                inputFour.value = position.coords.longitude
                inputFive.setAttribute('name', 'myLatitude')
                inputFive.value = position.coords.latitude
                inputSix.setAttribute('name', 'myFinalHomeLocation')
                inputSix.value = myFinalHomeLocation
                formElement.appendChild(inputOne)
                formElement.appendChild(inputTwo)
                formElement.appendChild(inputThree)
                formElement.appendChild(inputFour)
                formElement.appendChild(inputFive)
                formElement.appendChild(inputSix)
                formElement.setAttribute('method', 'POST')
                formElement.setAttribute('action', '')
                formElement.style.display = 'none'
                document.body.appendChild(formElement)
                formElement.submit()
            })
            .catch(error => {
                console.log('error', error)
            });
        }
  </script>
</body>
</html>
